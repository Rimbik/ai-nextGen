# -*- coding: utf-8 -*-
"""knn_and_simpleimpute.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pnzSST7HvRHMgfX9VNsF1rgsd0ZWeyts
"""

from sklearn.impute import KNNImputer
from sklearn.impute import SimpleImputer
import numpy as np
import pandas as pd

#sample dataset
data = {
    'Age'      : [20 ,None,30   ,32],
    'PClass'   : [1  ,2   ,1    ,3],
    'Fare'     : [50 ,60  ,None ,40],
    'Survived' : [0  ,1   ,0    ,1]
};

df = pd.DataFrame(data);


imputer = KNNImputer(n_neighbors=2, weights='uniform');
imputed = imputer.fit_transform(df);

# print the imputed (filledin Null values)
# print(imputed) see the imputed array
df = pd.DataFrame(imputed);
df.columns = ['Age','PClass','Fare','Survived'];
print(df)

# ---------------------------------------

# https://www.geeksforgeeks.org/ml-handle-missing-data-with-simple-imputer/
from sklearn.impute import SimpleImputer
import numpy as np
import pandas as pd

#sample dataset
data = {
    'Age'      : [20,None,30,32],
    'PClass'   : [1,2,1,3],
    'Fare'     : [50,60,None,40],
    'Survived' : [0,1,0,1]
};

df = pd.DataFrame(data);
data = df.to_numpy()

imputer = SimpleImputer(missing_values = np.nan,strategy ='mean')
# Fitting the data to the imputer object
imputer = imputer.fit(data)
imputed = imputer.transform(data)

# print("Imputed Data : \n", imputed)
df = pd.DataFrame(imputed);
df.columns = ['Age','PClass','Fare','Survived'];
print(df)