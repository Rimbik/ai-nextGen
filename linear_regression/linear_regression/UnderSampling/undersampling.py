# -*- coding: utf-8 -*-
"""Undersampling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JtodkEYqDrnYKI8PJ3sygRfLzH7FDBd5
"""

from imblearn.under_sampling import RandomUnderSampler
from collections import Counter
import pandas as pd

# Example dataset
data = {'feature1': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
        'feature2': [11, 12, 13, 14, 15, 16, 17, 18, 19, 20],
        'class': [0, 0, 0, 0, 0, 1, 1, 1, 0, 0]}
df = pd.DataFrame(data)
X = df[['feature1', 'feature2']]
y = df['class']

df

# prompt: Using dataframe df: scatter plot

import altair as alt

# Create a scatter plot of feature1 vs. feature2, colored by class
alt.Chart(df).mark_circle().encode(
    x='feature1',
    y='feature2',
    color='class'
)

# Apply Random Under-Sampling:

rus = RandomUnderSampler(random_state=42)
X_resampled, y_resampled = rus.fit_resample(X, y)
print(sorted(Counter(y_resampled).items()))

print('Original dataset shape:', Counter(y))
print('Resampled dataset shape:', Counter(y_resampled))

# Note: Out of 10 records , only 3 records have been taken as UnderSampling