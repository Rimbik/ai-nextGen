# -*- coding: utf-8 -*-
"""Linear_Regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bEz1PnkNMZQv9aBD7TGNm-AHyjllG0_i
"""

# Linear-Regression - Prediction of Sell price of cars
# Soumen Dey (ref: youtube)

import pandas as pd
from io import StringIO

import json
from io import FileIO
from json import loads, dumps
from pydrive2.auth import GoogleAuth
from pydrive2.drive import GoogleDrive

from google.colab import drive
from google.colab import auth
from oauth2client.client import GoogleCredentials

# import csv
from os import system, name
from decimal import Decimal, InvalidOperation
from time import sleep
import matplotlib.pyplot as plt



# %matplotlib inline
# ---------------- CODE ----------------------------------------

# Authenticate and create the PyDrive client.
# This part is crucial for accessing files in your Google Drive
auth.authenticate_user()
gauth = GoogleAuth()
gauth.credentials = GoogleCredentials.get_application_default()
drive = GoogleDrive(gauth)

fName= 'CarData.csv'
folderId = '1kbZYoC9zuRZq1-yDbJRKgPy-EqSQQFwR'

# pd.options.mode.copy_on_write = True

def read_file( id_file ) :
      # file_list = drive.ListFile({'q': "title='MyAiFile.txt' and trashed=false"}).GetList()
      title = "title='" + id_file + "' and trashed=false"
      print ('File reading: ', title)

      # #Get the file from the list as per API Spec
      file_list = drive.ListFile({'q': title}).GetList()

      if len(file_list) > 0:
          file = file_list[0]
          file_content = file.GetContentString()

          return file_content
      else:
        print("File : ", id_file , " not found")

# ---- Code starts -------------
records = read_file(fName)
df = pd.read_csv(StringIO(records))
df

plt.scatter(df['Milege'],df['SellPrice'])

plt.scatter(df['Age(yrs)'],df['SellPrice'])

X = df[['Milege','Age(yrs)']]
y = df['SellPrice']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state=11)
# use random_state to have the same selection in the record set everytime you run.

X_train

y_train

X_test

y_test

len(X_train), len(y_train),len(X_test),len(y_test)

from sklearn.linear_model import LinearRegression
clf = LinearRegression()
clf.fit(X_train,y_train)
LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1)

X_test

y_test

clf.predict(X_test)

# Get Score/Correctness
clf.score(X_test,y_test)